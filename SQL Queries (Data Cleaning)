-- Data Cleaning Project

-- 1. Remove Duplicates
-- 2. Standadize the data
-- 3. Null or Blank values
-- 4. Remove any unnecessary columns

SELECT *
FROM layoffs; 

CREATE TABLE temp_layoffs
LIKE layoffs;

SELECT *
FROM temp_layoffs;

INSERT temp_layoffs
SELECT *
FROM layoffs;

SELECT *
FROM temp_layoffs;

SELECT *,
ROW_NUMBER() 
OVER(PARTITION BY company, location, industry, total_laid_off, 
percentage_laid_off, `date`, stage, country, funds_raised_millions) 
AS row_num
FROM temp_layoffs;

-- Remove Duplicates

WITH duplicate_cte AS
(
SELECT *,
ROW_NUMBER() 
OVER(PARTITION BY company, location, industry, total_laid_off, 
percentage_laid_off, `date`, stage, country, funds_raised_millions) 
AS row_num
FROM temp_layoffs
)
SELECT *
FROM duplicate_cte
WHERE row_num > 1;

-- WITH duplicate_cte AS
-- (
-- SELECT *,
-- ROW_NUMBER() 
-- OVER(PARTITION BY company, location, industry, total_laid_off, 
-- percentage_laid_off, `date`, stage, country, funds_raised_millions) 
-- AS row_num
-- FROM temp_layoffs
-- )
-- DELETE 
-- FROM duplicate_cte
-- WHERE row_num > 1;

CREATE TABLE `temp_layoffs2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_num` INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

SELECT *
FROM temp_layoffs2;

INSERT temp_layoffs2
SELECT *,
ROW_NUMBER() 
OVER(PARTITION BY company, location, industry, total_laid_off, 
percentage_laid_off, `date`, stage, country, funds_raised_millions) 
AS row_num
FROM temp_layoffs;

SELECT *
FROM temp_layoffs2
WHERE row_num > 1;

DELETE
FROM temp_layoffs2
WHERE row_num > 1;

SELECT *
FROM temp_layoffs2
WHERE row_num > 1;

SELECT *
FROM temp_layoffs2;

-- Standardizing data 

SELECT DISTINCT company
FROM temp_layoffs2;

UPDATE temp_layoffs2
SET company = TRIM(company);

SELECT DISTINCT industry
FROM temp_layoffs2;

SELECT DISTINCT industry
FROM temp_layoffs2
ORDER BY industry;

SELECT * 
FROM temp_layoffs2
WHERE industry LIKE 'Crypto%';

UPDATE temp_layoffs2
SET industry = 'Crypto'
WHERE industry LIKE 'Crypto%';

SELECT * 
FROM temp_layoffs2
WHERE industry LIKE 'Crypto%';

SELECT DISTINCT country
FROM temp_layoffs2
ORDER BY country;

SELECT * 
FROM temp_layoffs2
WHERE country LIKE 'United States%';

UPDATE temp_layoffs2
SET country = 'United States'
WHERE country LIKE 'United States%';

SELECT DISTINCT country
FROM temp_layoffs2
ORDER BY country;

SELECT `date`,
STR_TO_DATE(`date`, '%m/%d/%Y') 
FROM temp_layoffs2;

UPDATE temp_layoffs2
SET `date` = REPLACE(`date`, '-', '/');

SELECT `date`,
STR_TO_DATE(`date`, '%m/%d/%Y') 
FROM temp_layoffs2;


UPDATE temp_layoffs2
SET `date` = STR_TO_DATE(`date`, '%m/%d/%Y');


ALTER TABLE temp_layoffs2
MODIFY COLUMN `date` DATE;

-- Handling Null or Blank values

SELECT *
FROM temp_layoffs2
WHERE industry IS NULL
OR industry = '';

UPDATE temp_layoffs2
SET industry = NULL
WHERE industry = '';

SELECT *
FROM temp_layoffs2
WHERE company = 'Airbnb';

SELECT t1.industry, t2.industry
FROM temp_layoffs2 AS t1
JOIN temp_layoffs2 AS t2
	ON t1.company = t2.company
    AND t1.location = t2.location
WHERE t1.industry IS NULL AND t2.industry IS NOT NULL;

UPDATE temp_layoffs2 AS t1
JOIN temp_layoffs2 AS t2
	ON t1.company = t2.company
    AND t1.location = t2.location
SET t1.industry = t2.industry
WHERE t1.industry IS NULL AND t2.industry IS NOT NULL;

SELECT *
FROM temp_layoffs2
WHERE total_laid_off IS NULL
AND percentage_laid_off IS NULL;

DELETE
FROM temp_layoffs2
WHERE total_laid_off IS NULL
AND percentage_laid_off IS NULL;

SELECT *
FROM temp_layoffs2;

-- Removing Unnecessary Column

ALTER TABLE temp_layoffs2
DROP COLUMN row_num;

SELECT *
FROM temp_layoffs2;
